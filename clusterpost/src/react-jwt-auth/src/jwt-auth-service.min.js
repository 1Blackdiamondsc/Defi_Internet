export default class JWTAuthService{constructor(){this.http=null}setHttp(t){this.http=t}createUser(t){return this.http({method:"POST",url:"/auth/user",data:t}).then(function(t){localStorage.setItem("clusterpost_token",t.data.token)})}getUsers(){return this.http({method:"GET",url:"/auth/users"})}getUser(){return this.http.get("/auth/user").then(function(t){return t.data})}deleteSelf(){return this.http({method:"DELETE",url:"/auth/user"})}login(t){return this.http({method:"POST",url:"/auth/login",data:t}).then(function(t){return localStorage.setItem("clusterpost_token",t.data.token),!0})}updatePassword(t,e){return this.http({method:"PUT",url:"/auth/login",data:t,headers:{authorization:"Bearer "+e}}).then(function(t){localStorage.setItem("clusterpost_token",t.data.token)})}sendRecoverPassword(t){return this.http({method:"POST",url:"/auth/reset",data:t})}logout(){return localStorage.removeItem("clusterpost_token"),Promise.resolve()}updateUser(t){return this.http({method:"PUT",url:"/auth/users",data:t})}updateSelf(t){return this.http({method:"PUT",url:"/auth/user",data:t})}deleteUser(t){return this.http({method:"DELETE",url:"/auth/users",data:t})}getScopes(){return this.http({method:"GET",url:"/auth/scopes"})}updateScopes(t){return this.http({method:"PUT",url:"/auth/scopes",data:t})}}