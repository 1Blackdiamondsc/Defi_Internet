"use strict";const Hoek=require("@hapi/hoek"),ObjectType=require("../object"),Ref=require("../../ref"),internals={};internals.Func=class extends ObjectType.constructor{constructor(){super(),this._flags.func=!0}arity(t){return Hoek.assert(Number.isSafeInteger(t)&&t>=0,"n must be a positive integer"),this._test("arity",t,function(e,r,n){return e.length===t?e:this.createError("function.arity",{n:t},r,n)})}minArity(t){return Hoek.assert(Number.isSafeInteger(t)&&t>0,"n must be a strict positive integer"),this._test("minArity",t,function(e,r,n){return e.length>=t?e:this.createError("function.minArity",{n:t},r,n)})}maxArity(t){return Hoek.assert(Number.isSafeInteger(t)&&t>=0,"n must be a positive integer"),this._test("maxArity",t,function(e,r,n){return e.length<=t?e:this.createError("function.maxArity",{n:t},r,n)})}ref(){return this._test("ref",null,function(t,e,r){return Ref.isRef(t)?t:this.createError("function.ref",{value:t},e,r)})}class(){return this._test("class",null,function(t,e,r){return/^\s*class\s/.test(t.toString())?t:this.createError("function.class",{value:t},e,r)})}},module.exports=new internals.Func;