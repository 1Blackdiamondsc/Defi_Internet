angular.module("clusterpost-list").directive("clusterpostJobs",function(e,o,t,n,c,r){return{restrict:"E",link:function(e,o){e.jobs={selectedJob:{job:{}},edit:{show:!1},showScopes:!1},r.getUser().then(function(o){return e.user=o,r.getScopes().then(function(o){o.data&&o.data[0]?e.clusterScopes=_.filter(o.data[0].scopes,function(e){return"default"!=e&&"admin"!=e&&"clusterpost"!=e}):console.error("No scopes found!")})}).then(function(){return e.getDB()}),e.jobs.onFilter=function(o){e.jobs.filteredJobs=o},e.updateStatus=function(e){t.getJobStatus(e._id).then(function(o){e.jobstatus=o.data}).catch(function(e){throw console.error(e),e})},e.removeJobScope=function(o,t){if(o.scope){var n=o.scope.indexOf(t);if(-1!=n)return o.scope.splice(n,1),e.saveJob(o)}},e.addJobScope=function(o){if(e.jobs.selectedScope)return o.scope||(o.scope=[]),o.scope.push(e.jobs.selectedScope),o.scope=_.uniq(o.scope),e.saveJob(o)},e.addJobsScope=function(o){_.each(e.jobs.filteredJobs,e.addJobScope)},e.removeJobsScope=function(o){_.each(e.jobs.filteredJobs,function(o){e.removeJobScope(o,e.jobs.selectedScope)})},e.killJob=function(e){t.killJob(e._id).then(function(o){e.jobstatus=o.data}).catch(function(e){throw console.error(e),e})},e.removeRow=function(o){var t=e.rowCollection.indexOf(o);-1!==t&&e.rowCollection.splice(t,1)},e.deleteJob=function(o){t.deleteJob(o._id).then(function(t){for(var n=0;n<e.jobs.data.length;n++)e.jobs.data[n]._id===o._id&&e.jobs.data.splice(n,1)}).catch(function(e){throw console.error(e),e})},e.runJob=function(o,n){t.submitJob(o._id,n).then(function(o){e.getDB()}).catch(function(e){console.error(e)})},e.saveJob=function(e){return t.updateJob(angular.copy(e)).then(function(o){o&&o.data&&o.data[0]&&o.data[0].rev&&(e._rev=o.data[0].rev)}).catch(function(e){console.error(e)})},e.getDB=function(){(-1!==e.user.scope.indexOf("admin")?e.executable?_.isArray(e.executable)?Promise.all(_.map(e.executable,function(e){return t.getAllJobs(e)})).then(function(e){return{data:_.flatten(_.pluck(e,"data"))}}):t.getAllJobs():t.getAllJobs(e.executable):e.executable?_.isArray(e.executable)?Promise.all(_.map(e.executable,function(e){return t.getUserJobs({executable:e})})).then(function(e){return{data:_.flatten(_.pluck(e,"data"))}}):t.getUserJobs({executable:e.executable}):t.getUserJobs()).then(function(o){e.jobs.data=o.data,e.jobs.status=_.uniq(_.pluck(_.pluck(o.data,"jobstatus"),"status")),e.jobs.executables=_.uniq(_.pluck(o.data,"executable"))}).then(function(){return t.getExecutionServers()}).then(function(o){e.executionservers=o.data}).catch(function(e){console.error(e)})},e.showJobDetail=function(o){e.jobs.selectedJob.job=o,e.activeTab=1,t.getAttachment(o._id,"stdout.out","text").then(function(o){e.jobs.selectedJob.stdout=o.data}).catch(console.error),t.getAttachment(o._id,"stderr.err","text").then(function(o){e.jobs.selectedJob.stderr=o.data}).catch(console.error)},e.runAllJobs=function(){if(e.jobs.filteredJobs){var o=_.map(e.jobs.filteredJobs,function(e){return t.submitJob(e._id).then(function(e){console.log(e)}).catch(console.error)});Promise.all(o).catch(console.error)}},e.updateAllJobs=function(){if(e.jobs.filteredJobs){var o=_.map(e.jobs.filteredJobs,function(e){return t.getJobStatus(e._id).then(function(o){e.jobstatus=o.data}).catch(console.error)});Promise.all(o).catch(console.error)}},e.deleteAllJobs=function(){if(e.jobs.filteredJobs){var o=_.map(e.jobs.filteredJobs,e.deleteJob);Promise.all(o).catch(console.error)}},e.killAllJobs=function(){if(e.jobs.filteredJobs){var o=_.map(e.jobs.filteredJobs,e.killJob);Promise.all(o).catch(console.error)}},e.saveJobEdit=function(){e.jobs.edit.showerror=!1;try{var o=JSON.parse(e.jobs.edit.jobtext);t.updateJob(o).then(function(t){e.jobs.edit.show=!1,e.jobs.selectedJob.job=o;for(var n=0;n<e.jobs.data.length;n++)o._id===e.jobs.data[n]._id&&(e.jobs.data[n]=o)}).catch(function(o){e.jobs.edit.error=o.message,e.jobs.edit.showerror=!0})}catch(o){e.jobs.edit.error=o.message,e.jobs.edit.showerror=!0}},e.downloadJob=function(o){return e.downloadCallback?e.downloadCallback(o):t.getJobDownload(o._id).then(function(e){var t=o._id+".tar.gz";o.name&&(t=o.name+".tar.gz"),pom.setAttribute("href",window.URL.createObjectURL(e)),pom.setAttribute("download",t),pom.dataset.downloadurl=["application/octet-stream",pom.download,pom.href].join(":"),pom.click()})},e.downloadAll=function(){if(e.jobs.filteredJobs){var o=_.map(e.jobs.filteredJobs,e.downloadJob);Promise.all(o).catch(console.error)}},e.numJobsInPage=[{id:"0",value:"10"},{id:"1",value:"50"},{id:"2",value:"100"}],e.rowCollection=[],e.forceRunJob=!1,e.activeTab=0,e.$watch("jobs.edit.show",function(){e.jobs.edit.show&&(e.jobs.edit.jobtext=JSON.stringify(e.jobs.selectedJob.job,null,4))})},templateUrl:"./src/clusterpost-jobs.directive.html",scope:{executable:"=",jobCallback:"=",downloadCallback:"="}}}),angular.module("clusterpost-list").directive("onFilter",function(){return{require:"^stTable",scope:{onFilter:"="},link:function(e,o,t,n){e.$watch(n.getFilteredCollection,function(o){e.onFilter&&e.onFilter(o)})}}});